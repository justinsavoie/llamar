name: Build Windows binary (ZIP)

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  win-zip:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.2'
          use-public-rspm: true

      - name: Set up Rtools (required to build packages on Windows)
        uses: r-lib/actions/setup-rtools@v2

      - name: Install R dependencies
        shell: Rscript {0}
        run: |
          install.packages(c("Rcpp"), repos = "https://cloud.r-project.org")

      # üîÅ REPLACE your two bash steps with this single R step
      - name: Build source tarball and Windows binary (force internal tar)
        shell: Rscript {0}
        run: |
          # Always use R's internal tar on Windows to avoid "invalid octal digit"
          Sys.setenv(TAR = "internal")

          # 1) Build source tarball
          build_status <- system2(file.path(R.home("bin"), "R"),
                                  args = c("CMD", "build", ".", "--no-manual", "--no-build-vignettes"))
          if (build_status != 0) stop("R CMD build failed with status ", build_status)

          # 2) Find the newest tarball
          tb <- dir(pattern = "[.]tar[.]gz$", full.names = TRUE)
          if (!length(tb)) stop("No source tarball (*.tar.gz) found after build")
          tb <- tb[which.max(file.mtime(tb))]
          message("Building binary from: ", tb)

          # 3) Build Windows ZIP from the tarball (still using internal tar)
          Sys.setenv(TAR = "internal")
          zip_status <- system2(file.path(R.home("bin"), "R"),
                                args = c("CMD", "INSTALL", "--build", tb))
          if (zip_status != 0) stop("R CMD INSTALL --build failed with status ", zip_status)

      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: win-binary-zip
          path: ./*.zip
